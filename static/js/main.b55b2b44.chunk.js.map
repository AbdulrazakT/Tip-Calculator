{"version":3,"sources":["TopContainer.js","BottomContainer.js","App.js","reportWebVitals.js","index.js"],"names":["TopContainer","props","useState","bill","setBill","tip","setTip","total","setTotal","percent","setPercent","className","type","placeholder","onChange","event","target","value","min","max","temp","Number","toFixed","alert","temp_total","BottomContainer","splitValue","setSplitValue","billEach","setBillEach","tipEach","setTipEach","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA6DeA,MAzDf,SAAsBC,GAAO,MAEHC,mBAAS,GAFN,mBAEpBC,EAFoB,KAEdC,EAFc,OAGLF,mBAAS,GAHJ,mBAGpBG,EAHoB,KAGfC,EAHe,OAIDJ,mBAAS,GAJR,mBAIpBK,EAJoB,KAIbC,EAJa,OAKGN,mBAAS,GALZ,mBAKpBO,EALoB,KAKXC,EALW,KA4B3B,OACE,sBAAKC,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,0CACA,uBAAOC,KAAK,SAASC,YAAY,YAAYC,SAzBnD,SAAqBC,GACnBX,EAAQW,EAAMC,OAAOC,aA2BnB,sBAAKN,UAAU,QAAf,UACE,gDACA,4BAAIF,OAGN,uBAAOG,KAAK,QAAQM,IAAI,IAAIC,IAAI,MAAML,SA7B1C,SAAoBC,GAElBL,EAAWK,EAAMC,OAAOC,OAGxB,IAAIG,GAAqC,IAA7BC,OAAON,EAAMC,OAAOC,OAAgBI,OAAOlB,IAAOmB,QAAQ,GAItE,GAHAhB,EAAOc,GAGHjB,GAAQ,EACVoB,MAAM,6CACD,CACL,IAAIC,EAAaH,OAAOhB,GAAOgB,OAAOlB,GACtCK,EAASgB,EAAWF,QAAQ,QAkB5B,sBAAKX,UAAU,QAAf,UACE,yCACA,kCAAKN,QAGP,uBAEA,sBAAKM,UAAU,QAAf,UACE,2CACA,kCAAKJ,Y,MCfEkB,MArCf,SAAyBxB,GAAQ,IAAD,EACMC,mBAAS,GADf,mBACvBwB,EADuB,KACXC,EADW,OAEEzB,mBAAS,GAFX,mBAEvB0B,EAFuB,KAEbC,EAFa,OAGA3B,mBAAS,GAHT,mBAGvB4B,EAHuB,KAGdC,EAHc,KAItBxB,EAAUN,EAAVM,MAWR,OACE,sBAAKI,UAAU,YAAf,UACE,sBAAKA,UAAU,QAAf,UACE,2CACA,8BAAIe,EAAJ,gBAGF,uBAAOd,KAAK,QAAQM,IAAI,IAAIC,IAAI,KAAKL,SAhBzC,SAAsBC,GACpBY,EAAcZ,EAAMC,OAAOC,OAC3BY,GAAatB,EAAQmB,GAAYJ,QAAQ,IACzCS,GAAYH,EAAW,GAAGN,QAAQ,IAElCU,QAAQC,IAAI1B,GACZyB,QAAQC,IAAIP,MAYV,sBAAKf,UAAU,QAAf,UACE,+CACA,kCAAKiB,QAGP,sBAAKjB,UAAU,QAAf,UACE,8CACA,kCAAKmB,YClBEI,MAZf,WACE,OACE,sBAAKvB,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,IAGA,cAAC,EAAD,CAAiBJ,MAAM,YCCd4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.b55b2b44.chunk.js","sourcesContent":["import \"./TopContainer.css\";\r\nimport React, { useState } from \"react\";\r\n\r\n//WITH HOOKS\r\nfunction TopContainer(props) {\r\n  //state declaration\r\n  const [bill, setBill] = useState(0);\r\n  const [tip, setTip] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  function billHandler(event) {\r\n    setBill(event.target.value);\r\n  }\r\n\r\n  function tipHandler(event) {\r\n    //Update percent value\r\n    setPercent(event.target.value);\r\n\r\n    //update tip value\r\n    let temp = (Number(event.target.value) * 0.01 * Number(bill)).toFixed(2);\r\n    setTip(temp);\r\n\r\n    //update total value\r\n    if (bill <= 0) {\r\n      alert(\"Bill amount must be greater than Zero\");\r\n    } else {\r\n      let temp_total = Number(tip) + Number(bill);\r\n      setTotal(temp_total.toFixed(2));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"containerTop\">\r\n      <div className=\"align\">\r\n        <label>Bill:</label>\r\n        <input type=\"number\" placeholder=\"Your Bill\" onChange={billHandler} />\r\n      </div>\r\n\r\n      <div className=\"align\">\r\n        <label>Select Tip:</label>\r\n        <p>{percent}</p>\r\n      </div>\r\n\r\n      <input type=\"range\" min=\"0\" max=\"100\" onChange={tipHandler} />\r\n\r\n      <div className=\"align\">\r\n        <label>Tip:</label>\r\n        <p>${tip}</p>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"align\">\r\n        <label>Total:</label>\r\n        <p>${total}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopContainer;\r\n\r\n//WITHOUT HOOKS ()\r\n// class TopContainer extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = { bill: 0, tip: 0, total: 0 };\r\n//   }\r\n\r\n//   billHandler = (event) => {\r\n//     this.setState({ bill: event.target.value });\r\n//   };\r\n\r\n//   tipHandler = (event) => {\r\n//     this.setState({ tip: event.target.value });\r\n//     if (this.state.bill <= 0) {\r\n//       alert(\"Enter Bill Amount!\");\r\n//     } else {\r\n//       let totalBill = eval(\r\n//         this.state.tip * 0.01 * this.state.bill + Number(this.state.bill)\r\n//       );\r\n//       this.setState({ total: totalBill.toFixed(2) });\r\n//     }\r\n\r\n//     console.log(\"tip\", event.target.value);\r\n//     console.log(\"bill\", this.state.bill);\r\n//   };\r\n\r\n//   render() {\r\n//     //Destructuring properties\r\n//     const { tip, total } = this.state;\r\n//     return (\r\n//       <div className=\"containerTop\">\r\n//         <div className=\"align\">\r\n//           <label>Bill:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             placeholder=\"Your Bill\"\r\n//             onChange={this.billHandler}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"align\">\r\n//           <label>Select Tip:</label>\r\n//           <p>{tip}</p>\r\n//         </div>\r\n\r\n//         <input type=\"range\" min=\"1\" max=\"100\" onChange={this.tipHandler} />\r\n\r\n//         <div className=\"align\">\r\n//           <label>Tip:</label>\r\n//           <p>${tip}</p>\r\n//         </div>\r\n\r\n//         <hr />\r\n\r\n//         <div className=\"align\">\r\n//           <label>Total:</label>\r\n//           <p>${total}</p>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","import \"./BottomContainer.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction BottomContainer(props) {\r\n  const [splitValue, setSplitValue] = useState(1);\r\n  const [billEach, setBillEach] = useState(0);\r\n  const [tipEach, setTipEach] = useState(0);\r\n  const { total } = props;\r\n\r\n  function splitHandler(event) {\r\n    setSplitValue(event.target.value);\r\n    setBillEach((total / splitValue).toFixed(2));\r\n    setTipEach((billEach / 2).toFixed(2));\r\n\r\n    console.log(total);\r\n    console.log(splitValue);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"align\">\r\n        <label>Split:</label>\r\n        <p>{splitValue} Person</p>\r\n      </div>\r\n\r\n      <input type=\"range\" min=\"1\" max=\"10\" onChange={splitHandler} />\r\n\r\n      <div className=\"align\">\r\n        <label>Bill Each:</label>\r\n        <p>${billEach}</p>\r\n      </div>\r\n\r\n      <div className=\"align\">\r\n        <label>Tip Each:</label>\r\n        <p>${tipEach}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BottomContainer;\r\n","import \"./App.css\";\nimport TopContainer from \"./TopContainer\";\nimport BottomContainer from \"./BottomContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>Quick Tip</h2>\n      <TopContainer />\n      {/* Request: I want the total value to be passed from the Top Container to the Bottom Container\n      and them to sync */}\n      <BottomContainer total=\"100\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}